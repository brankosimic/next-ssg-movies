{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\filterOptions.tsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useRouter } from 'next/router';\n\nconst FilterOption = ({\n  filter,\n  typeOfFilter,\n  selectedFilter\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const router = useRouter();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = type => {\n    setAnchorEl(null);\n    router.push({\n      query: {\n        jelOVO: type\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      children: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: typeOfFilter.map((type, index) => {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => selectedFilter(type),\n          value: type,\n          children: type\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FilterOption;","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/filterOptions.tsx"],"names":["React","Button","Menu","MenuItem","useRouter","FilterOption","filter","typeOfFilter","selectedFilter","anchorEl","setAnchorEl","useState","router","handleClick","event","currentTarget","handleClose","type","push","query","jelOVO","Boolean","map","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAOA,MAAMC,YAAkD,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAA2C;AACpG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAmC,IAAnC,CAAhC;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;;AACA,QAAMS,WAAW,GAAIC,KAAD,IAAgD;AAClEJ,IAAAA,WAAW,CAACI,KAAK,CAACC,aAAP,CAAX;AAED,GAHD;;AAKA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5BP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,MAAM,CAACM,IAAP,CAAY;AACRC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAEH;AAAV;AADC,KAAZ;AAGD,GALD;;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,uBAAc,aAAtB;AAAoC,uBAAc,MAAlD;AAAyD,MAAA,OAAO,EAAEJ,WAAlE;AAAA,gBACIP;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,WAAW,MAHb;AAIE,MAAA,IAAI,EAAEY,OAAO,CAACZ,QAAD,CAJf;AAKE,MAAA,OAAO,EAAEO,WALX;AAAA,gBAOKT,YAAY,CAACe,GAAb,CAAiB,CAACL,IAAD,EAAOM,KAAP,KAAiB;AACjC,4BAAO,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,MAAIf,cAAc,CAACS,IAAD,CAArC;AAAyD,UAAA,KAAK,EAAEA,IAAhE;AAAA,oBAAuEA;AAAvE,WAAkDM,KAAlD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AAPL;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAhCD;;AAkCA,eAAelB,YAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useRouter } from 'next/router'\r\ntype FilterOptionProps = {\r\n    filter: string;\r\n    typeOfFilter?: string[];\r\n    selectedFilter?: any;\r\n}\r\n\r\nconst FilterOption: FunctionComponent<FilterOptionProps> = ({filter,typeOfFilter, selectedFilter}) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const router = useRouter()\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    \r\n  };\r\n\r\n  const handleClose = (type) => {\r\n    setAnchorEl(null);\r\n    router.push({\r\n        query: { jelOVO: type },\r\n      })\r\n  };\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n         {filter}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n          {typeOfFilter.map((type, index) => {\r\n            return <MenuItem onClick={()=>selectedFilter(type)} key={index} value={type}>{type}</MenuItem>\r\n          })}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterOption;"]},"metadata":{},"sourceType":"module"}