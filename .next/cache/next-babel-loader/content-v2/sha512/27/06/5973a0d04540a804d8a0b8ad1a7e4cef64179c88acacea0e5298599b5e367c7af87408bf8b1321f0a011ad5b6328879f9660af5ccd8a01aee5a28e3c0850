{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/ValensSarajevo/Desktop/testApp/movies/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ValensSarajevo/Desktop/testApp/movies/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport MediaCard from \"./Card\";\nimport api from \"../services/api\";\n\nvar MoviesList = function MoviesList(_ref) {\n  var popularMovies = _ref.popularMovies;\n\n  var _useState = useState(popularMovies),\n      movies = _useState[0],\n      setMovies = _useState[1];\n\n  var getMoviesByGenre = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(genres) {\n      var year,\n          genresLookup,\n          genreIds,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              year = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"\";\n              _context.next = 3;\n              return api.getAllGenres();\n\n            case 3:\n              genresLookup = _context.sent;\n              genreIds = genresLookup.filter(function (x) {\n                return genres.includes(x.name);\n              }).map(function (x) {\n                return x.id;\n              });\n              _context.next = 7;\n              return api.getFilteredMovies(genreIds.join(\",\"), year);\n\n            case 7:\n              data = _context.sent;\n              setMovies(data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getMoviesByGenre(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var urlParams = new URLSearchParams(window.location.search);\n    var genresString = urlParams.get(\"genre\");\n    var year = urlParams.get(\"year\");\n\n    if (genresString) {\n      getMoviesByGenre(genresString.split(\",\"), year);\n    }\n  }, []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"media-container\",\n    children: movies.map(function (movie, index) {\n      return /*#__PURE__*/_jsx(MediaCard, {\n        movie: movie\n      }, index);\n    })\n  });\n};\n\nexport default MoviesList;","map":null,"metadata":{},"sourceType":"module"}