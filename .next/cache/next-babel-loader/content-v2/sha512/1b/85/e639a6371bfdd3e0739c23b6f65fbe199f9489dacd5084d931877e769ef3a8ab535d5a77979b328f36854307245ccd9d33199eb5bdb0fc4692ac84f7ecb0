{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\Filters.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nvar Filters = function Filters(_ref) {\n  _s();\n\n  var genres = _ref.genres;\n\n  var _useState = useState([]),\n      selectedGenres = _useState[0],\n      setSelectedGenres = _useState[1];\n\n  var _useState2 = useState(''),\n      selectedYear = _useState2[0],\n      setSelectedYear = _useState2[1];\n\n  var handleChange = useCallback(function (event) {\n    setSelectedGenres(event.target.value);\n  }, []);\n\n  var handleSubmit = function handleSubmit() {\n    window.location.href = \"\".concat(window.location.origin, \"?genre=\").concat(selectedGenres.join(\",\"), \"&year=\").concat(selectedYear);\n  };\n\n  var handleInputChange = useCallback(function (event) {\n    var enteredYear = event.target.value;\n    setSelectedYear(enteredYear);\n  }, []);\n\n  var handleCloseMenu = function handleCloseMenu() {};\n\n  useEffect(function () {\n    var urlParams = new URLSearchParams(window.location.search);\n    var genresString = urlParams.get(\"genre\");\n    var year = urlParams.get(\"year\");\n\n    if (genresString) {\n      setSelectedGenres(genresString.split(\",\"));\n    }\n\n    if (year) {\n      setSelectedYear(year);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        className: \"genre-label\",\n        children: \"Choose genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'close',\n        onClick: handleCloseMenu,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-name-label\",\n        id: \"demo-simple-select\",\n        onChange: handleChange,\n        value: selectedGenres,\n        multiple: true,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, _this),\n        children: genres.map(function (genre) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: genre.name,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: 'Filter by year',\n      onChange: handleInputChange,\n      value: selectedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Filters, \"EUBnHaTd66WSvpYLfyXOqU30m9s=\");\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/Filters.tsx"],"names":["Button","FormControl","Input","InputLabel","MenuItem","Select","React","useCallback","useEffect","useState","Filters","genres","selectedGenres","setSelectedGenres","selectedYear","setSelectedYear","handleChange","event","target","value","handleSubmit","window","location","href","origin","join","handleInputChange","enteredYear","handleCloseMenu","urlParams","URLSearchParams","search","genresString","get","year","split","map","genre","name","id"],"mappings":"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","sourcesContent":["import { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport IGenre from \"../interfaces/IGenre\";\r\n\r\ntype FilterProps = {\r\n  genres: IGenre[];\r\n};\r\n\r\nconst Filters: FunctionComponent<FilterProps> = ({ genres }) => {\r\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\r\n  const [selectedYear, setSelectedYear] = useState<string>('');\r\n  const handleChange = useCallback((event: React.ChangeEvent<{ value: string[] | string }>) => {\r\n    setSelectedGenres(event.target.value as string[]);\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    window.location.href = `${window.location.origin}?genre=${selectedGenres.join(\",\")}&year=${selectedYear}`;\r\n  };\r\n\r\n  const handleInputChange = useCallback((event: React.ChangeEvent<{ value: string }>) => {\r\n    const enteredYear = event.target.value\r\n    setSelectedYear(enteredYear)\r\n  },[])\r\n  const handleCloseMenu = () => {\r\n\r\n  }\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const genresString = urlParams.get(\"genre\");\r\n    const year = urlParams.get(\"year\")\r\n    if (genresString) {\r\n      setSelectedGenres(genresString.split(\",\"));\r\n    }\r\n    if (year){\r\n      setSelectedYear(year)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"filters-container\"}>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\" className={\"genre-label\"}>\r\n          Choose genre\r\n        </InputLabel>\r\n        <p className={'close'} onClick={handleCloseMenu}>X</p>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={handleChange}\r\n          value={selectedGenres}\r\n          multiple\r\n          input={<Input />}\r\n        >\r\n          \r\n          {genres.map((genre) => (\r\n            <MenuItem value={genre.name} key={genre.id}>\r\n              {genre.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        \r\n      </FormControl>\r\n      <Input placeholder={'Filter by year' } onChange={handleInputChange} value={selectedYear}/>\r\n      <Button onClick={handleSubmit}>Select</Button>\r\n    </div>\r\n  );\r\n};\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}