{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\Filters.tsx\";\nimport { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nconst Filters = ({\n  genres\n}) => {\n  const {\n    0: selectedGenres,\n    1: setSelectedGenres\n  } = useState([]);\n  const {\n    0: selectedYear,\n    1: setSelectedYear\n  } = useState('');\n  const handleChange = useCallback(event => {\n    setSelectedGenres(event.target.value);\n  }, []);\n\n  const handleSubmit = () => {\n    window.location.href = `${window.location.origin}?genre=${selectedGenres.join(\",\")}&year=${selectedYear}`;\n  };\n\n  const handleInputChange = event => {\n    const enteredYear = event.target.value;\n    setSelectedYear(enteredYear);\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const genresString = urlParams.get(\"genre\");\n    const year = urlParams.get(\"year\");\n\n    if (genresString) {\n      setSelectedGenres(genresString.split(\",\"));\n    }\n\n    if (year) {\n      setSelectedYear(year);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        className: \"genre-label\",\n        children: \"Choose genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-name-label\",\n        id: \"demo-simple-select\",\n        onChange: handleChange,\n        value: selectedGenres,\n        multiple: true,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this),\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: genre.name,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: 'Filter by year',\n      onChange: handleInputChange,\n      value: selectedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Filters;","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/Filters.tsx"],"names":["Button","FormControl","Input","InputLabel","MenuItem","Select","React","useCallback","useEffect","useState","Filters","genres","selectedGenres","setSelectedGenres","selectedYear","setSelectedYear","handleChange","event","target","value","handleSubmit","window","location","href","origin","join","handleInputChange","enteredYear","urlParams","URLSearchParams","search","genresString","get","year","split","map","genre","name","id"],"mappings":"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","sourcesContent":["import { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport IGenre from \"../interfaces/IGenre\";\r\n\r\ntype FilterProps = {\r\n  genres: IGenre[];\r\n};\r\n\r\nconst Filters: FunctionComponent<FilterProps> = ({ genres }) => {\r\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\r\n  const [selectedYear, setSelectedYear] = useState<string>('');\r\n  const handleChange = useCallback((event: React.ChangeEvent<{ value: string[] | string }>) => {\r\n    setSelectedGenres(event.target.value as string[]);\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    window.location.href = `${window.location.origin}?genre=${selectedGenres.join(\",\")}&year=${selectedYear}`;\r\n  };\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<{ value: string }>) => {\r\n    const enteredYear = event.target.value\r\n    setSelectedYear(enteredYear)\r\n  }\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const genresString = urlParams.get(\"genre\");\r\n    const year = urlParams.get(\"year\")\r\n    if (genresString) {\r\n      setSelectedGenres(genresString.split(\",\"));\r\n    }\r\n    if (year){\r\n      setSelectedYear(year)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"filters-container\"}>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\" className={\"genre-label\"}>\r\n          Choose genre\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={handleChange}\r\n          value={selectedGenres}\r\n          multiple\r\n          input={<Input />}\r\n        >\r\n          {genres.map((genre) => (\r\n            <MenuItem value={genre.name} key={genre.id}>\r\n              {genre.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        \r\n      </FormControl>\r\n      <Input placeholder={'Filter by year' } onChange={handleInputChange} value={selectedYear}/>\r\n      <Button onClick={handleSubmit}>Select</Button>\r\n    </div>\r\n  );\r\n};\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}