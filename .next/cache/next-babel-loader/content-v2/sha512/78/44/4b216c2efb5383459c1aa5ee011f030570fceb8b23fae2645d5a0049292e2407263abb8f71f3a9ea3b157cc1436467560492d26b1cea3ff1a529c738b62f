{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/ValensSarajevo/Desktop/testApp/movies/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\Filters.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { useCallback, useEffect } from \"react\";\n\nvar Filters = function Filters(_ref) {\n  _s();\n\n  var genres = _ref.genres;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedGenres = _React$useState2[0],\n      setSelectedGenres = _React$useState2[1];\n\n  var handleChange = useCallback(function (event) {\n    setSelectedGenres(event.target.value);\n  }, []);\n\n  var handleSubmit = function handleSubmit() {\n    window.location.href = \"\".concat(window.location.origin, \"?genre=\").concat(selectedGenres.join(\",\"));\n  };\n\n  useEffect(function () {\n    var urlParams = new URLSearchParams(window.location.search);\n    var genresString = urlParams.get(\"genre\");\n\n    if (genresString) {\n      setSelectedGenres(genresString.split(\",\"));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        className: \"genre-label\",\n        children: \"Choose genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-name-label\",\n        id: \"demo-simple-select\",\n        onChange: handleChange,\n        value: selectedGenres,\n        multiple: true,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, _this),\n        children: genres.map(function (genre) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: genre.name,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Filters, \"AcJg42WuAywahUsqaQKoem2bdUI=\");\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/Filters.tsx"],"names":["Button","FormControl","Input","InputLabel","MenuItem","Select","React","useCallback","useEffect","Filters","genres","useState","selectedGenres","setSelectedGenres","handleChange","event","target","value","handleSubmit","window","location","href","origin","join","urlParams","URLSearchParams","search","genresString","get","split","map","genre","name","id"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,MAA3D,QAAyE,mBAAzE;AACA,OAAOC,KAAP,IAAmCC,WAAnC,EAAgDC,SAAhD,QAAiE,OAAjE;;AAOA,IAAMC,OAAuC,GAAG,SAA1CA,OAA0C,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,wBAClBJ,KAAK,CAACK,QAAN,CAAyB,EAAzB,CADkB;AAAA;AAAA,MACvDC,cADuD;AAAA,MACvCC,iBADuC;;AAE9D,MAAMC,YAAY,GAAGP,WAAW,CAAC,UAACQ,KAAD,EAA4D;AAC3FF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAF+B,EAE7B,EAF6B,CAAhC;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,aAA0BF,MAAM,CAACC,QAAP,CAAgBE,MAA1C,oBAA0DV,cAAc,CAACW,IAAf,CAAoB,GAApB,CAA1D;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,SAAS,GAAG,IAAIC,eAAJ,CAAoBN,MAAM,CAACC,QAAP,CAAgBM,MAApC,CAAlB;AACA,QAAMC,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAc,OAAd,CAArB;;AACA,QAAID,YAAJ,EAAkB;AAChBd,MAAAA,iBAAiB,CAACc,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAD,CAAjB;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAA0C,QAAA,SAAS,EAAE,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,yBADV;AAEE,QAAA,EAAE,EAAC,oBAFL;AAGE,QAAA,QAAQ,EAAEf,YAHZ;AAIE,QAAA,KAAK,EAAEF,cAJT;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,iBANT;AAAA,kBAQGF,MAAM,CAACoB,GAAP,CAAW,UAACC,KAAD;AAAA,8BACV,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,KAAK,CAACC,IAAvB;AAAA,sBACGD,KAAK,CAACC;AADT,aAAkCD,KAAK,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAX;AARH;AAAA;AAAA;AAAA;AAAA,eAJF,eAkBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEf,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CA1CD;;GAAMT,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useCallback, useEffect } from \"react\";\r\nimport IGenre from \"../interfaces/IGenre\";\r\n\r\ntype FilterProps = {\r\n  genres: IGenre[];\r\n};\r\n\r\nconst Filters: FunctionComponent<FilterProps> = ({ genres }) => {\r\n  const [selectedGenres, setSelectedGenres] = React.useState<string[]>([]);\r\n  const handleChange = useCallback((event: React.ChangeEvent<{ value: string[] | string }>) => {\r\n    setSelectedGenres(event.target.value as string[]);\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    window.location.href = `${window.location.origin}?genre=${selectedGenres.join(\",\")}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const genresString = urlParams.get(\"genre\");\r\n    if (genresString) {\r\n      setSelectedGenres(genresString.split(\",\"));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"filters-container\"}>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\" className={\"genre-label\"}>\r\n          Choose genre\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={handleChange}\r\n          value={selectedGenres}\r\n          multiple\r\n          input={<Input />}\r\n        >\r\n          {genres.map((genre) => (\r\n            <MenuItem value={genre.name} key={genre.id}>\r\n              {genre.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <Button onClick={handleSubmit}>Select</Button>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}