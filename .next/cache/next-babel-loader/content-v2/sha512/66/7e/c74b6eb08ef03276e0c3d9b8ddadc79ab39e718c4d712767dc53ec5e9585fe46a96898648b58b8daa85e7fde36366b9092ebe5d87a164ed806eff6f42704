{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\filters.tsx\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Filters = ({\n  genres\n}) => {\n  const {\n    0: aha,\n    1: setAha\n  } = useState(false);\n  useEffect(() => {\n    setAha(!aha);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: genres.map(genre => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: genre.name\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Filters;","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/filters.tsx"],"names":["React","useEffect","useState","Filters","genres","aha","setAha","map","genre","name","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;;AAMA,MAAMC,OAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC9D,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBJ,QAAQ,CAAC,KAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA,cAEID,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACtB,0BAAO;AAAA,kBAAqBA,KAAK,CAACC;AAA3B,SAAUD,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFC;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAbD;;AAeA,eAAeP,OAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport FilterOption from \"./filterOptions\";\r\ntype FilterProps = {\r\n  genres: any;\r\n};\r\n\r\nconst Filters: FunctionComponent<FilterProps> = ({ genres }) => {\r\n  const [aha, setAha] = useState(false);\r\n  useEffect(() => {\r\n    setAha(!aha);\r\n  }, []);\r\n  return (\r\n    <div className={\"filters-container\"}>\r\n      {/* { aha ? <FilterOption filter={typOfFilter} typeOfFilter={genres} selectedFilter={selectedFilter}/> : null} */}\r\n      { genres.map((genre) => {\r\n        return <div key={genre.id}>{genre.name}</div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}