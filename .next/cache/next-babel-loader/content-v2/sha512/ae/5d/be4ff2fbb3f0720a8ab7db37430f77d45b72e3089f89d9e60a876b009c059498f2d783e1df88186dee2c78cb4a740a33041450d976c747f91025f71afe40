{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\movieList.tsx\";\nimport React, { useEffect } from \"react\";\nimport MediaCard from \"./card\";\nimport Filters from './filters';\nimport axios from \"axios\";\nconst SEARCH_API = 'https://api.themoviedb.org/3/search/movie?api_key=f1ec200c0c6354d5b75565ea0b89bb27&language=en-US&';\n\nconst MoviesList = ({\n  movies\n}) => {\n  const gener = ['Action', 'Horor', 'Sci-Fi', 'Comdey'];\n  let moviesByFilter;\n\n  const handleSelectedFilter = async type => {\n    moviesByFilter = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=f1ec200c0c6354d5b75565ea0b89bb27&language=en-US&query=${type}`);\n  };\n\n  const test = useEffect(() => {\n    handleSelectedFilter;\n  }, [handleSelectedFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Filters, {\n        typOfFilter: 'Genre',\n        genre: gener,\n        selectedFilter: 'handleSelectedFilter'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map((movie, index) => {\n        return /*#__PURE__*/_jsxDEV(MediaCard, {\n          movie: movie\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MoviesList;","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/movieList.tsx"],"names":["React","useEffect","MediaCard","Filters","axios","SEARCH_API","MoviesList","movies","gener","moviesByFilter","handleSelectedFilter","type","get","test","map","movie","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgDC,SAAhD,QAAiE,OAAjE;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,MAAMC,UAAU,GAAG,oGAAnB;;AAGA,MAAMC,UAA8C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACnE,QAAMC,KAAe,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,QAA9B,CAAxB;AACA,MAAIC,cAAJ;;AAEA,QAAMC,oBAAoB,GAAG,MAAOC,IAAP,IAAuB;AAClDF,IAAAA,cAAc,GAAG,MAAML,KAAK,CAACQ,GAAN,CAAW,2GAA0GD,IAAK,EAA1H,CAAvB;AACD,GAFD;;AAIA,QAAME,IAAI,GAAGZ,SAAS,CAAC,MAAM;AAC3BS,IAAAA,oBAAoB;AAAC,GADD,EACE,CAACA,oBAAD,CADF,CAAtB;AAGF,sBACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA,4BACI;AAAA,6BACA,QAAC,OAAD;AAAS,QAAA,WAAW,EAAE,OAAtB;AAA+B,QAAA,KAAK,EAAEF,KAAtC;AAA6C,QAAA,cAAc,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACDD,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAED;AAAlB,WAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBD;;AAyBA,eAAeV,UAAf","sourcesContent":["import React, { FunctionComponent, useCallback, useEffect } from \"react\";\r\nimport MediaCard from \"./card\";\r\nimport MoviesInterface from \"../interfaces/moviesInterface\";\r\nimport Filters from './filters'\r\nimport axios from \"axios\";\r\ntype MoviesListProps = {\r\n  movies: MoviesInterface[];\r\n};\r\nconst SEARCH_API = 'https://api.themoviedb.org/3/search/movie?api_key=f1ec200c0c6354d5b75565ea0b89bb27&language=en-US&'\r\n\r\n\r\nconst MoviesList: FunctionComponent<MoviesListProps> = ({ movies }) => {\r\n    const gener: string[] = ['Action', 'Horor', 'Sci-Fi', 'Comdey']\r\n    let moviesByFilter:any;\r\n\r\n    const handleSelectedFilter = async (type:string) => {\r\n      moviesByFilter = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=f1ec200c0c6354d5b75565ea0b89bb27&language=en-US&query=${type}`)\r\n    }\r\n\r\n    const test = useEffect(() => {\r\n      handleSelectedFilter},[handleSelectedFilter])\r\n\r\n  return (\r\n    <div className={\"media-container\"}>\r\n        <div>\r\n        <Filters typOfFilter={'Genre'} genre={gener} selectedFilter={'handleSelectedFilter'}/>\r\n        </div>\r\n        <div>\r\n      {movies.map((movie, index) => {\r\n        return <MediaCard movie={movie} key={index} />;\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n"]},"metadata":{},"sourceType":"module"}