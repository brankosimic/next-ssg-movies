{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\MovieList.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport MediaCard from \"./Card\";\nimport api from \"../services/api\";\n\nconst MoviesList = ({\n  popularMovies\n}) => {\n  const {\n    0: movies,\n    1: setMovies\n  } = useState();\n\n  const getMoviesByGenre = async (genres, year = '') => {\n    const genresLookup = await api.getAllGenres();\n    const genreIds = genresLookup.filter(x => genres.includes(x.name)).map(x => x.id);\n    const data = await api.getFilteredMovies(genreIds.join(\",\"), year);\n    setMovies(data);\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const genresString = urlParams.get(\"genre\");\n    const year = urlParams.get(\"year\");\n    console.log('STA RADIS ', year);\n\n    if (genresString) {\n      getMoviesByGenre(genresString.split(\",\"), year);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-container\",\n    children: (movies || popularMovies).map((movie, index) => {\n      return /*#__PURE__*/_jsxDEV(MediaCard, {\n        movie: movie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MoviesList;","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/MovieList.tsx"],"names":["React","useEffect","useState","MediaCard","api","MoviesList","popularMovies","movies","setMovies","getMoviesByGenre","genres","year","genresLookup","getAllGenres","genreIds","filter","x","includes","name","map","id","data","getFilteredMovies","join","urlParams","URLSearchParams","window","location","search","genresString","get","console","log","split","movie","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgDC,SAAhD,EAA2DC,QAA3D,QAA2E,OAA3E;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAGA,OAAOC,GAAP,MAAgB,iBAAhB;;AAMA,MAAMC,UAA8C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC5E,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,EAApC;;AAEA,QAAMO,gBAAgB,GAAG,OAAOC,MAAP,EAAyBC,IAAY,GAAG,EAAxC,KAA+C;AACtE,UAAMC,YAAY,GAAG,MAAMR,GAAG,CAACS,YAAJ,EAA3B;AACA,UAAMC,QAAQ,GAAGF,YAAY,CAACG,MAAb,CAAqBC,CAAD,IAAON,MAAM,CAACO,QAAP,CAAgBD,CAAC,CAACE,IAAlB,CAA3B,EAAoDC,GAApD,CAAyDH,CAAD,IAAOA,CAAC,CAACI,EAAjE,CAAjB;AACA,UAAMC,IAAI,GAAG,MAAMjB,GAAG,CAACkB,iBAAJ,CAAsBR,QAAQ,CAACS,IAAT,CAAc,GAAd,CAAtB,EAA0CZ,IAA1C,CAAnB;AACAH,IAAAA,SAAS,CAACa,IAAD,CAAT;AACD,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,UAAMC,YAAY,GAAGL,SAAS,CAACM,GAAV,CAAc,OAAd,CAArB;AACA,UAAMnB,IAAI,GAAGa,SAAS,CAACM,GAAV,CAAc,MAAd,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBrB,IAAzB;;AACA,QAAIkB,YAAJ,EAAkB;AAChBpB,MAAAA,gBAAgB,CAACoB,YAAY,CAACI,KAAb,CAAmB,GAAnB,CAAD,EAA0BtB,IAA1B,CAAhB;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA,cACG,CAACJ,MAAM,IAAID,aAAX,EAA0Ba,GAA1B,CAA8B,CAACe,KAAD,EAAQC,KAAR,KAAkB;AAC/C,0BAAO,QAAC,SAAD;AAAW,QAAA,KAAK,EAAED;AAAlB,SAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;AA6BA,eAAe9B,UAAf","sourcesContent":["import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport MediaCard from \"./Card\";\r\nimport MoviesInterface from \"../interfaces/IMovie\";\r\nimport axios from \"axios\";\r\nimport api from \"../services/api\";\r\n\r\ntype MoviesListProps = {\r\n  popularMovies: MoviesInterface[];\r\n};\r\n\r\nconst MoviesList: FunctionComponent<MoviesListProps> = ({ popularMovies }) => {\r\n  const [movies, setMovies] = useState<MoviesInterface[]>();\r\n\r\n  const getMoviesByGenre = async (genres: string[], year: string = '') => {\r\n    const genresLookup = await api.getAllGenres();\r\n    const genreIds = genresLookup.filter((x) => genres.includes(x.name)).map((x) => x.id);\r\n    const data = await api.getFilteredMovies(genreIds.join(\",\"), year);\r\n    setMovies(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const genresString = urlParams.get(\"genre\");\r\n    const year = urlParams.get(\"year\")\r\n    console.log('STA RADIS ',year )\r\n    if (genresString) {\r\n      getMoviesByGenre(genresString.split(\",\"), year);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"media-container\"}>\r\n      {(movies || popularMovies).map((movie, index) => {\r\n        return <MediaCard movie={movie} key={index} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n"]},"metadata":{},"sourceType":"module"}