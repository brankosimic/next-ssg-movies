{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\n\nclass Api {\n  constructor() {\n    _defineProperty(this, \"getPopularMovies\", async () => {\n      const {\n        data\n      } = await axios.get(process.env.API_URL);\n      return data.results;\n    });\n\n    _defineProperty(this, \"getFilteredMovies\", async genre => {\n      const {\n        data\n      } = await axios.get(process.env.DISCOVER_API.replace(\"{genre}\", genre));\n      return data.results;\n    });\n\n    _defineProperty(this, \"getAllGenres\", async () => {\n      const {\n        data\n      } = await axios.get(process.env.GENRES_API);\n      return data.genres;\n    });\n  }\n\n}\n\nconst api = new Api();\nexport default api;","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/services/api.ts"],"names":["axios","Api","data","get","process","env","API_URL","results","genre","DISCOVER_API","replace","GENRES_API","genres","api"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,GAAN,CAAU;AAAA;AAAA,8CACkB,YAA+B;AACvD,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMF,KAAK,CAACG,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,OAAtB,CAAvB;AACA,aAAOJ,IAAI,CAACK,OAAZ;AACD,KAJO;;AAAA,+CAMmB,MAAOC,KAAP,IAA4C;AACrE,YAAM;AAAEN,QAAAA;AAAF,UAAW,MAAMF,KAAK,CAACG,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYI,YAAZ,CAAyBC,OAAzB,CAAiC,SAAjC,EAA4CF,KAA5C,CAAV,CAAvB;AAEA,aAAON,IAAI,CAACK,OAAZ;AACD,KAVO;;AAAA,0CAYc,YAA+B;AACnD,YAAM;AAAEL,QAAAA;AAAF,UAAW,MAAMF,KAAK,CAACG,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYM,UAAtB,CAAvB;AAEA,aAAOT,IAAI,CAACU,MAAZ;AACD,KAhBO;AAAA;;AAAA;;AAmBV,MAAMC,GAAG,GAAG,IAAIZ,GAAJ,EAAZ;AACA,eAAeY,GAAf","sourcesContent":["import axios from \"axios\";\r\nimport IGenre from \"../interfaces/IGenre\";\r\nimport IMovie from \"../interfaces/IMovie\";\r\n\r\nclass Api {\r\n  public getPopularMovies = async (): Promise<IMovie[]> => {\r\n    const { data } = await axios.get(process.env.API_URL);\r\n    return data.results;\r\n  };\r\n\r\n  public getFilteredMovies = async (genre: string): Promise<IMovie[]> => {\r\n    const { data } = await axios.get(process.env.DISCOVER_API.replace(\"{genre}\", genre));\r\n\r\n    return data.results\r\n  };\r\n\r\n  public getAllGenres = async (): Promise<IGenre[]> => {\r\n    const { data } = await axios.get(process.env.GENRES_API);\r\n\r\n    return data.genres;\r\n  };\r\n}\r\n\r\nconst api = new Api();\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}