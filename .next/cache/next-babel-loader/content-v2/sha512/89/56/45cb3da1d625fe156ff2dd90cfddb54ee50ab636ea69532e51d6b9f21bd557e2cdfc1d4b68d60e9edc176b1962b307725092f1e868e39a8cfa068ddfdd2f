{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/ValensSarajevo/Desktop/testApp/movies/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ValensSarajevo/Desktop/testApp/movies/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ValensSarajevo\\\\Desktop\\\\testApp\\\\movies\\\\components\\\\MovieList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MediaCard from \"./Card\";\nimport api from \"../services/api\";\nvar SEARCH_API = \"https://api.themoviedb.org/3/search/movie?api_key=f1ec200c0c6354d5b75565ea0b89bb27&language=en-US&query=${type}\";\n\nvar MoviesList = function MoviesList(_ref) {\n  _s();\n\n  var popularMovies = _ref.popularMovies;\n\n  var _useState = useState(),\n      movies = _useState[0],\n      setMovies = _useState[1];\n\n  var getMoviesByGenre = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(genreIds) {\n      var test, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              test = '10751,99,16';\n              _context.next = 3;\n              return api.getFilteredMovies(test);\n\n            case 3:\n              data = _context.sent;\n              setMovies(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getMoviesByGenre(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var urlParams = new URLSearchParams(window.location.search);\n    var genresString = urlParams.get(\"genre\");\n\n    if (genresString) {\n      var genres = genresString.split(',');\n      var genreIds = api.genresLookup.filter(function (x) {\n        return genres.includes(x.name);\n      }).map(function (x) {\n        return x.id;\n      });\n      getMoviesByGenre(genreIds.join(','));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-container\",\n    children: (movies || popularMovies).map(function (movie, index) {\n      return /*#__PURE__*/_jsxDEV(MediaCard, {\n        movie: movie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MoviesList, \"DsXWz4eQ6qRZ9Cx7rzTltn/5uKY=\");\n\n_c = MoviesList;\nexport default MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["C:/Users/ValensSarajevo/Desktop/testApp/movies/components/MovieList.tsx"],"names":["React","useEffect","useState","MediaCard","api","SEARCH_API","MoviesList","popularMovies","movies","setMovies","getMoviesByGenre","genreIds","test","getFilteredMovies","data","urlParams","URLSearchParams","window","location","search","genresString","get","genres","split","genresLookup","filter","x","includes","name","map","id","join","movie","index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgDC,SAAhD,EAA2DC,QAA3D,QAA2E,OAA3E;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAGA,OAAOC,GAAP,MAAgB,iBAAhB;AAKA,IAAMC,UAAU,GACd,iHADF;;AAGA,IAAMC,UAA8C,GAAG,SAAjDA,UAAiD,OAAuB;AAAA;;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBAChDL,QAAQ,EADwC;AAAA,MACrEM,MADqE;AAAA,MAC7DC,SAD6D;;AAG5E,MAAMC,gBAAgB;AAAA,yEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,cAAAA,IADiB,GACX,aADW;AAAA;AAAA,qBAEJR,GAAG,CAACS,iBAAJ,CAAsBD,IAAtB,CAFI;;AAAA;AAEjBE,cAAAA,IAFiB;AAGvBL,cAAAA,SAAS,CAACK,IAAD,CAAT;;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBJ,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAMAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,QAAMC,YAAY,GAAGL,SAAS,CAACM,GAAV,CAAc,OAAd,CAArB;;AACA,QAAID,YAAJ,EAAkB;AAChB,UAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf;AACA,UAAMZ,QAAQ,GAAGP,GAAG,CAACoB,YAAJ,CAAiBC,MAAjB,CAAwB,UAAAC,CAAC;AAAA,eAAIJ,MAAM,CAACK,QAAP,CAAgBD,CAAC,CAACE,IAAlB,CAAJ;AAAA,OAAzB,EAAsDC,GAAtD,CAA0D,UAAAH,CAAC;AAAA,eAAIA,CAAC,CAACI,EAAN;AAAA,OAA3D,CAAjB;AACApB,MAAAA,gBAAgB,CAACC,QAAQ,CAACoB,IAAT,CAAc,GAAd,CAAD,CAAhB;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA,cACG,CAACvB,MAAM,IAAID,aAAX,EAA0BsB,GAA1B,CAA8B,UAACG,KAAD,EAAQC,KAAR,EAAkB;AAC/C,0BAAO,QAAC,SAAD;AAAW,QAAA,KAAK,EAAED;AAAlB,SAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CA1BD;;GAAM3B,U;;KAAAA,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport MediaCard from \"./Card\";\r\nimport MoviesInterface from \"../interfaces/IMovie\";\r\nimport axios from \"axios\";\r\nimport api from \"../services/api\";\r\n\r\ntype MoviesListProps = {\r\n  popularMovies: MoviesInterface[];\r\n};\r\nconst SEARCH_API =\r\n  \"https://api.themoviedb.org/3/search/movie?api_key=f1ec200c0c6354d5b75565ea0b89bb27&language=en-US&query=${type}\";\r\n\r\nconst MoviesList: FunctionComponent<MoviesListProps> = ({ popularMovies }) => {\r\n  const [movies, setMovies] = useState<MoviesInterface[]>();\r\n\r\n  const getMoviesByGenre = async (genreIds: string) => {\r\n    const test ='10751,99,16'\r\n    const data = await api.getFilteredMovies(test);\r\n    setMovies(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const genresString = urlParams.get(\"genre\");\r\n    if (genresString) {\r\n      const genres = genresString.split(',');\r\n      const genreIds = api.genresLookup.filter(x => genres.includes(x.name)).map(x => x.id)\r\n      getMoviesByGenre(genreIds.join(','));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"media-container\"}>\r\n      {(movies || popularMovies).map((movie, index) => {\r\n        return <MediaCard movie={movie} key={index} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n"]},"metadata":{},"sourceType":"module"}